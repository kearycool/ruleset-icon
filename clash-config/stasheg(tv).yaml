######### 锚点 start #######
# 策略组相关
pr: &pr {type: select, proxies: [节点选择, 香港故转, 日本故转, 香港自动, 日本自动, 美国自动, 韩国自动, 其他地区自动, 自动选择, 加坡节点, 香港节点, 韩国节点, 日本节点, 美国节点, 负载均衡, 全部节点, 直连]}
#这里是订阅更新和延迟测试相关的
p: &p {type: http, interval: 3600, health-check: {enable: true, url: "https://www.gstatic.com/generate_204", interval: 300}}
######### 锚点 end #######

proxy-providers:
  provider1:
    !!merge <<: *p
    url: "订阅链接1"
  provider2:
    !!merge <<: *p
    url: "订阅链接2"
ipv6: true
allow-lan: true
mixed-port: 7890
external-controller: 127.0.0.1:9090
profile:
  store-selected: true
  store-fake-ip: true
dns:
  enable: true
  ipv6: true
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "*"
    - "+.lan"
    - "+.local"
    - "rule-set:cn_domain"
    - "rule-set:private_domain"
    - "+.apple.com"
    - "+.icloud.com"
  default-nameserver:
    - 223.5.5.5
  nameserver:
    - https://doh.pub/dns-query
    - https://dns.alidns.com/dns-query
  nameserver-policy:
    "rule-set:private_domain,cn_domain": https://doh.pub/dns-query
    "rule-set:geolocation-!cn": https://dns.google/dns-query
script:
  shortcuts:
    quic: network == 'udp' and dst_port == 443
proxies:
- name: "直连"
  type: direct
  udp: true
proxy-groups:
  - {name: 节点选择, type: select, proxies: [香港故转, 日本故转, 香港自动, 日本自动, 美国自动, 韩国自动, 其他地区自动, 自动选择, 加坡节点, 韩国节点, 香港节点, 日本节点, 美国节点, 负载均衡, 全部节点, 直连], icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/refs/heads/main/Icon/Color/Large/Server.png"}
  - {name: YouTube, !!merge <<: *pr, icon: "https://raw.githubusercontent.com/qljsyph/HOMOMIX/refs/heads/main/Icon/Color/Large/YouTube.png"}
  - {name: Hulu, !!merge <<: *pr, icon: "https://raw.githubusercontent.com/qljsyph/HOMOMIX/refs/heads/main/Icon/Color/Large/Hulu.png"}
  - {name: NETFLIX, !!merge <<: *pr, icon: "https://raw.githubusercontent.com/qljsyph/HOMOMIX/refs/heads/main/Icon/Color/Large/Netflix.png"}
  - {name: Disney, !!merge <<: *pr, icon: "https://raw.githubusercontent.com/qljsyph/HOMOMIX/refs/heads/main/Icon/Color/Large/Disney.png"}
  - {name: Bahamut, !!merge <<: *pr, icon: "https://raw.githubusercontent.com/qljsyph/HOMOMIX/refs/heads/main/Icon/Color/Large/Bahamut_b.png"}
  - {name: HBO, !!merge <<: *pr, icon: "https://raw.githubusercontent.com/qljsyph/HOMOMIX/refs/heads/main/Icon/Color/Large/HBO_MAX.png"}
  - {name: Spotify, !!merge <<: *pr, icon: "https://raw.githubusercontent.com/qljsyph/HOMOMIX/refs/heads/main/Icon/Color/Large/Spotify.png"}
  - {name: Speedtest, !!merge <<: *pr, icon: "https://raw.githubusercontent.com/qljsyph/HOMOMIX/refs/heads/main/Icon/Color/Large/SpeedTest.png"}
  - {name: Apple, type: select, proxies: [直连, 节点选择, 美国自动, 香港自动], icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/refs/heads/main/Icon/Color/Large/Apple_black.png"}
  - {name: 全球直连, type: select, proxies: [直连, 节点选择], icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/refs/heads/main/Icon/Color/Large/China.png"}
  - {name: 漏网之鱼, type: select, proxies: [自动选择, 节点选择, 负载均衡, 直连, 其他地区自动], icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/refs/heads/main/Icon/Color/Large/Omission.png"}
  - {name: 香港节点, type: select, include-all: true, filter: "(?i)港|hk|hongkong|hong kong", icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/refs/heads/main/Icon/Color/Large/Hong_Kong.png"}
  - {name: 加坡节点, type: select, include-all: true, filter: "(?i)新加坡|狮城|坡|SG", icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/refs/heads/main/Icon/Color/Large/Singapore.png"}
  - {name: 韩国节点, type: select, include-all: true, filter: "(?i)韩|韩国|KR|kora", icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/refs/heads/main/Icon/Color/Large/South_Korea.png"}
  - {name: 日本节点, type: select, include-all: true, filter: "(?i)日|jp|japan", icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/refs/heads/main/Icon/Color/Large/Japan.png"}
  - {name: 美国节点, type: select, include-all: true, filter: "(?i)美|us|unitedstates|united states", icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/refs/heads/main/Icon/Color/Large/USA.png"}
  - {name: 香港故转, type: fallback, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(港|HK|(?i)Hong))^((?!(台|日|韩|新|深|美)).)*$", icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/refs/heads/main/Icon/Color/Large/Failover.png"}
  - {name: 日本故转, type: fallback, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(日本|JP|(?i)Japan))^((?!(港|台|韩|新|美)).)*$", icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/refs/heads/main/Icon/Color/Large/Failover.png"}
  - {name: 香港自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(港|HK|(?i)Hong))^((?!(台|日|韩|新|深|美)).)*$", icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/refs/heads/main/Icon/Color/Large/Auto_Link.png"}
  - {name: 日本自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(日本|JP|(?i)Japan))^((?!(港|台|韩|新|美)).)*$", icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/refs/heads/main/Icon/Color/Large/Auto_Link.png"}
  - {name: 美国自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(美|US|(?i)States|America))^((?!(港|台|日|韩|新)).)*$", icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/refs/heads/main/Icon/Color/Large/Auto_Link.png"}
  - {name: 韩国自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(韩|KR|(?i)States|Kora))^((?!(美|港|台|日|新|3|x3)).)*$", icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/refs/heads/main/Icon/Color/Large/Auto_Link.png"}
  - {name: 其他地区自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "^((?!(港|美|日|韩|新|US|HK|JP|KR|SG|America|States|Japan|Korea|Singapore|Hong|直连)).)*$", icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/refs/heads/main/Icon/Color/Large/Auto_Link.png"}
  - {name: 自动选择, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "^((?!(直连)).)*$", icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/refs/heads/main/Icon/Color/Large/Auto_Link.png"}
  - {name: 负载均衡, type: load-balance, include-all: true, tolerance: 150, interval: 300, filter: "(?=.*(0.1|0.5|(?i)States|Kora|韩国|俄罗斯|新加坡|越南))^((?!(🇸🇬|2x|x2|x3)).)*$", icon: "https://raw.githubusercontent.com/qljsyph/HOMOMIX/refs/heads/main/Icon/Color/Large/Load_balancing_2.png"}
  - {name: 全部节点, type: select, include-all: true, icon: "https://raw.githubusercontent.com/qljsyph/HOMOMIX/refs/heads/main/Icon/Color/Link.png"}

rules:
- RULE-SET,private_domain,直连
- RULE-SET,direct1,直连
- RULE-SET,apple_domain,Apple
- RULE-SET,applecn,Apple
- RULE-SET,proxylite,节点选择
- RULE-SET,youtube_domain,YouTube
- RULE-SET,disney_domain,Disney
- RULE-SET,hulu_domain,Hulu
- RULE-SET,netflix_domain,NETFLIX
- RULE-SET,spotify,Spotify
- RULE-SET,bahamut_domain,Bahamut
- RULE-SET,hbo_domain,HBO
- RULE-SET,speedtest_domain,Speedtest
- RULE-SET,geolocation-!cn,节点选择
- RULE-SET,cn_domain,全球直连
- RULE-SET,netflix_ip,NETFLIX,no-resolve
- RULE-SET,spotify_ip,Spotify,no-resolve
- RULE-SET,private_ip,直连,no-resolve #规则集IP规则相关联 private_ip
- RULE-SET,cn_ip,全球直连,no-resolve
- MATCH,漏网之鱼

rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}
rule-providers: 
  private_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.list"}
  direct1: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/qljsyph/ruleset-icon/refs/heads/main/mihomo/domain/Direct-enhance.yaml"}
  applecn: {!!merge <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/refs/heads/master/Clash/Apple.list"}
  proxylite: {!!merge <<: *class, url: "https://raw.githubusercontent.com/qljsyph/rule/refs/heads/MTP-rules/ProxyLiteqcyhub.list"}
  youtube_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.yaml"}
  hulu_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/hulu.yaml"}
  disney_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/disney.yaml"}
  netflix_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.yaml"}
  bahamut_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/bahamut.yaml"}
  hbo_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/hbo.yaml"}
  spotify: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/spotify.yaml"}
  apple_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple-cn.yaml"}
  speedtest_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/ookla-speedtest.yaml"}
  gfw_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.yaml"}
  geolocation-!cn: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.yaml"}
  cn_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.yaml"}
  cn_ip: {!!merge <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.yaml"}
  private_ip: {!!merge <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geoip/private.yaml"} #私有IP rule set no resolve
  netflix_ip: {!!merge <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.yaml"}
  spotify_ip: {!!merge <<: *ip, url: "https://raw.githubusercontent.com/qljsyph/ruleset-icon/refs/heads/main/mihomo/ipcidr/spotify-ip.yaml"}